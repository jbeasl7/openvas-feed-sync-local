# SPDX-FileCopyrightText: 2025 Greenbone AG
# Some text descriptions might be excerpted from (a) referenced
# source(s), and are Copyright (C) by the respective right holder(s).
#
# SPDX-License-Identifier: GPL-2.0-only

CPE = "cpe:/a:erlang:erlang%2fotp";

if(description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.105953");
  script_version("2025-05-09T15:42:11+0000");
  script_tag(name:"last_modification", value:"2025-05-09 15:42:11 +0000 (Fri, 09 May 2025)");
  script_tag(name:"creation_date", value:"2025-05-09 10:27:38 +0000 (Fri, 09 May 2025)");
  script_tag(name:"cvss_base", value:"2.6");
  script_tag(name:"cvss_base_vector", value:"AV:N/AC:H/Au:N/C:N/I:P/A:N");
  script_cve_id("CVE-2025-46712");
  script_name("Erlang/OTP (Erlang OTP) MITM Vulnerability (May 2025) - Linux");
  script_category(ACT_GATHER_INFO);
  script_copyright("Copyright (C) 2025 Greenbone AG");
  script_family("General");
  script_dependencies("gb_erlang_otp_ssh_banner_detect.nasl", "os_detection.nasl");
  script_mandatory_keys("erlang/otp/detected", "Host/runs_unixoide");

  script_xref(name:"URL", value:"https://github.com/erlang/otp/security/advisories/GHSA-934x-xq38-hhqf");

  script_tag(name:"summary", value:"Erlang/OTP (Erlang OTP) is prone to a man-in-the-middle (MITM)
  vulnerability in the SSH component.");

  script_tag(name:"vuldetect", value:"Checks if a vulnerable version is present on the target host.");

  script_tag(name:"insight", value:"Erlang/OTP SSH fails to enforce strict kex handshake hardening
  measures by allowing optional messages to be exchanged.");

  script_tag(name:"impact", value:"This allows a Man-in-the-Middle attacker to inject these messages
  in a connection during the handshake.");

  script_tag(name:"affected", value:"Erlang/OTP (Erlang OTP) versions starting from 22.3.4.27,
  23.3.4.20, 24.3.4.15, 25.3.2.8, 26.2.1 and 27.0.");

  script_tag(name:"solution", value:"Update to version 25.3.2.21, 26.2.5.12, 27.3.4 or later.");

  script_tag(name:"qod_type", value:"remote_banner_unreliable");
  script_tag(name:"solution_type", value:"VendorFix");

  exit(0);
}

include("version_func.inc");
include("host_details.inc");

if( isnull( port = get_app_port( cpe:CPE ) ) )
  exit( 0 );

if( ! infos = get_app_version_and_location( cpe:CPE, port:port, exit_no_version:TRUE ) )
  exit( 0 );

version = infos["version"];
location = infos["location"];

# nb: Special version handling for 22.3.x, 23.3.x and 22.4.x versions as it seems the flaw got only
# introduced when implementing the Strict KEX feature and these branches seems to be also already
# EOL and thus doesn't receive any fixes anymore.
if( ( version =~ "^22\.3" && version_is_greater_equal( version:version, test_version:"22.3.4.27" ) ) ||
    ( version =~ "^23\.3" && version_is_greater_equal( version:version, test_version:"23.3.4.20" ) ) ||
    ( version =~ "^24\.3" && version_is_greater_equal( version:version, test_version:"24.3.4.15" ) ) ||
    version_in_range_exclusive( version:version, test_version_lo:"25.3.2.8", test_version_up:"25.3.2.21" ) ) {
  report = report_fixed_ver( installed_version:version, fixed_version:"25.3.2.21", install_path:location );
  security_message( port:port, data:report );
  exit( 0 );
}

if( version_in_range_exclusive( version:version, test_version_lo:"26.2.1", test_version_up:"26.2.5.12" ) ) {
  report = report_fixed_ver( installed_version:version, fixed_version:"26.2.5.12", install_path:location );
  security_message( port:port, data:report );
  exit( 0 );
}

if( version_in_range_exclusive( version:version, test_version_lo:"27.0", test_version_up:"27.3.4" ) ) {
  report = report_fixed_ver( installed_version:version, fixed_version:"27.3.4", install_path:location );
  security_message( port:port, data:report );
  exit( 0 );
}

exit( 99 );
