# SPDX-FileCopyrightText: 2025 Greenbone AG
# Some text descriptions might be excerpted from (a) referenced
# source(s), and are Copyright (C) by the respective right holder(s).
#
# SPDX-License-Identifier: GPL-2.0-only

CPE = "cpe:/a:erlang:erlang%2fotp";

if(description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.105269");
  script_version("2025-04-25T15:41:53+0000");
  script_tag(name:"last_modification", value:"2025-04-25 15:41:53 +0000 (Fri, 25 Apr 2025)");
  script_tag(name:"creation_date", value:"2025-04-25 11:58:37 +0000 (Fri, 25 Apr 2025)");
  script_tag(name:"cvss_base", value:"4.3");
  script_tag(name:"cvss_base_vector", value:"AV:N/AC:H/Au:M/C:P/I:P/A:P");
  script_cve_id("CVE-2024-53846");
  script_name("Erlang/OTP (Erlang OTP) Improper Certificate Validation Vulnerability (Dec 2024)");
  script_category(ACT_GATHER_INFO);
  script_copyright("Copyright (C) 2025 Greenbone AG");
  script_family("General");
  script_dependencies("gb_erlang_otp_ssh_banner_detect.nasl");
  script_mandatory_keys("erlang/otp/detected");

  script_xref(name:"URL", value:"https://github.com/erlang/otp/security/advisories/GHSA-qw6r-qh9v-638v");

  script_tag(name:"summary", value:"Erlang/OTP (Erlang OTP) is prone to an improper certificate
  validation vulnerability in the ssl component.");

  script_tag(name:"vuldetect", value:"Checks if a vulnerable version is present on the target host.");

  script_tag(name:"insight", value:"A regression was introduced into the ssl application of OTP
  resulting in a server or client verifying the peer when incorrect extended key usage is presented
  (i.e., a server will verify a client if they have server auth ext key usage and vice versa).");

  # nb: Advisory currently has insufficient info in the "Affected versions" or "Patched versions"
  # parts at the top. The info below had to be taken from the description part instead.
  script_tag(name:"affected", value:"Erlang/OTP (Erlang OTP) versions starting from 25.3.2.8 and
  prior to 25.3.2.16, starting from 26.2 and prior to 26.2.5.6 and starting from 27.0 and prior to
  27.1.3.");

  script_tag(name:"solution", value:"Update to version 25.3.2.16, 26.2.5.6, 27.1.3 or later.");

  # nb: No major Linux distro currently has any backports for this flaw so a higher QoD is used.
  # If any backports will show up in the future (unlikely) this VT would need to be split.
  script_tag(name:"qod_type", value:"remote_banner");
  script_tag(name:"solution_type", value:"VendorFix");

  exit(0);
}

include("version_func.inc");
include("host_details.inc");

if( isnull( port = get_app_port( cpe:CPE ) ) )
  exit( 0 );

if( ! infos = get_app_version_and_location( cpe:CPE, port:port, exit_no_version:TRUE ) )
  exit( 0 );

version = infos["version"];
location = infos["location"];

if( version_in_range_exclusive( version:version, test_version_lo:"25.3.2.8", test_version_up:"25.3.2.16" ) ) {
  report = report_fixed_ver( installed_version:version, fixed_version:"25.3.2.16", install_path:location );
  security_message( port:port, data:report );
  exit( 0 );
}

if( version_in_range_exclusive( version:version, test_version_lo:"26.2", test_version_up:"26.2.5.6" ) ) {
  report = report_fixed_ver( installed_version:version, fixed_version:"26.2.5.6", install_path:location );
  security_message( port:port, data:report );
  exit( 0 );
}

if( version_in_range_exclusive( version:version, test_version_lo:"27.0", test_version_up:"27.1.3" ) ) {
  report = report_fixed_ver( installed_version:version, fixed_version:"27.1.3", install_path:location );
  security_message( port:port, data:report );
  exit( 0 );
}

exit( 99 );
