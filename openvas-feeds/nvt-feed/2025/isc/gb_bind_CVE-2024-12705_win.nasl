# SPDX-FileCopyrightText: 2025 Greenbone AG
# Some text descriptions might be excerpted from (a) referenced
# source(s), and are Copyright (C) by the respective right holder(s).
#
# SPDX-License-Identifier: GPL-2.0-only

CPE = "cpe:/a:isc:bind";

if (description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.153894");
  script_version("2025-01-31T05:37:27+0000");
  script_tag(name:"last_modification", value:"2025-01-31 05:37:27 +0000 (Fri, 31 Jan 2025)");
  script_tag(name:"creation_date", value:"2025-01-30 02:17:35 +0000 (Thu, 30 Jan 2025)");
  script_tag(name:"cvss_base", value:"7.8");
  script_tag(name:"cvss_base_vector", value:"AV:N/AC:L/Au:N/C:N/I:N/A:C");
  script_tag(name:"severity_vector", value:"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H");
  script_tag(name:"severity_origin", value:"NVD");
  script_tag(name:"severity_date", value:"2025-01-29 22:15:28 +0000 (Wed, 29 Jan 2025)");

  script_cve_id("CVE-2024-12705");

  script_tag(name:"qod_type", value:"remote_banner");

  script_tag(name:"solution_type", value:"VendorFix");

  script_name("ISC BIND DoS Vulnerability (CVE-2024-12705) - Windows");

  script_category(ACT_GATHER_INFO);

  script_copyright("Copyright (C) 2025 Greenbone AG");
  script_family("Denial of Service");
  script_dependencies("gb_isc_bind_consolidation.nasl", "os_detection.nasl");
  script_mandatory_keys("isc/bind/detected", "Host/runs_windows");

  script_tag(name:"summary", value:"ISC BIND is prone to a denial of service (DoS)
  vulnerability in the DNS-over-HTTPS implementation.");

  script_tag(name:"vuldetect", value:"Checks if a vulnerable version is present on the target host.");

  script_tag(name:"insight", value:"Clients using DNS-over-HTTPS (DoH) can exhaust a DNS resolver's
  CPU and/or memory by flooding it with crafted valid or invalid HTTP/2 traffic.");

  script_tag(name:"impact", value:"By flooding a target resolver with HTTP/2 traffic and exploiting
  this flaw, an attacker could overwhelm the server, causing high CPU and/or memory usage and
  preventing other clients from establishing DoH connections. This would significantly impair the
  resolver's performance and effectively deny legitimate clients access to the DNS resolution
  service.

  - Authoritative servers are affected by this vulnerability.

  - Resolvers are affected by this vulnerability.");

  script_tag(name:"affected", value:"ISC BIND version 9.18.0 through 9.18.32, 9.20.0 through
  9.20.4, 9.21.0 through 9.21.3 and 9.18.11-S1 through 9.18.32-S1.");

  script_tag(name:"solution", value:"Update to version 9.18.33, 9.20.5, 9.21.4, 9.18.33-S1 or
  later.");

  script_xref(name:"URL", value:"https://kb.isc.org/docs/cve-2024-12705");

  exit(0);
}

include("host_details.inc");
include("version_func.inc");

if (isnull(port = get_app_port(cpe: CPE)))
  exit(0);

if (!infos = get_app_full(cpe: CPE, port: port, exit_no_version: TRUE))
  exit(0);

version = infos["version"];
proto = infos["proto"];
location = infos["location"];

if (version =~ "^9\.[0-9]+\.[0-9]+s[0-9]") {
  if (version_in_range(version: version, test_version: "9.18.11s1", test_version2: "9.18.32s1")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "9.18.33-S1", install_path: location);
    security_message(port: port, data: report, proto: proto);
    exit(0);
  }
} else {
  if (version_in_range(version: version, test_version: "9.18.0", test_version2: "9.18.32")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "9.18.33", install_path: location);
    security_message(port: port, data: report, proto: proto);
    exit(0);
  }

  if (version_in_range(version: version, test_version: "9.20.0", test_version2: "9.20.4")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "9.20.5", install_path: location);
    security_message(port: port, data: report, proto: proto);
    exit(0);
  }

  if (version_in_range(version: version, test_version: "9.21.0", test_version2: "9.21.3")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "9.21.4", install_path: location);
    security_message(port: port, data: report, proto: proto);
    exit(0);
  }
}

exit(99);
