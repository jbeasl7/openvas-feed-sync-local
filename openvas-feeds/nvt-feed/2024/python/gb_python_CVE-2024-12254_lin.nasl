# SPDX-FileCopyrightText: 2024 Greenbone AG
# Some text descriptions might be excerpted from (a) referenced
# source(s), and are Copyright (C) by the respective right holder(s).
#
# SPDX-License-Identifier: GPL-2.0-only

CPE = "cpe:/a:python:python";

if(description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.153654");
  script_version("2025-02-06T05:38:57+0000");
  script_tag(name:"last_modification", value:"2025-02-06 05:38:57 +0000 (Thu, 06 Feb 2025)");
  script_tag(name:"creation_date", value:"2024-12-13 10:40:16 +0000 (Fri, 13 Dec 2024)");
  script_tag(name:"cvss_base", value:"7.8");
  script_tag(name:"cvss_base_vector", value:"AV:N/AC:L/Au:N/C:N/I:N/A:C");

  script_cve_id("CVE-2024-12254");

  script_tag(name:"qod_type", value:"remote_banner_unreliable");

  script_tag(name:"solution_type", value:"VendorFix");

  script_name("Python DoS Vulnerability (Dec 2024) - Linux");

  script_category(ACT_GATHER_INFO);

  script_copyright("Copyright (C) 2024 Greenbone AG");
  script_family("Denial of Service");
  script_dependencies("gb_python_consolidation.nasl", "os_detection.nasl");
  script_mandatory_keys("python/detected", "Host/runs_unixoide");

  script_tag(name:"summary", value:"Python is prone to a denial of service (DoS) vulnerability.");

  script_tag(name:"vuldetect", value:"Checks if a vulnerable version is present on the target host.");

  script_tag(name:"insight", value:"The asyncio._SelectorSocketTransport.writelines() method will
  not 'pause' writing and signal to the Protocol to drain the buffer to the wire once the write
  buffer reaches the 'high-water mark'. Because of this, Protocols do not periodically drain the
  write buffer potentially leading to memory exhaustion.");

  script_tag(name:"affected", value:"Python versions 3.12.x prior to 3.12.9 and 3.13.x prior to
  3.13.2.");

  script_tag(name:"solution", value:"Update to version 3.12.9, 3.13.2 or later.");

  script_xref(name:"URL", value:"https://mail.python.org/archives/list/security-announce@python.org/thread/H4O3UBAOAQQXGT4RE3E4XQYR5XLROORB/");
  script_xref(name:"URL", value:"https://github.com/python/cpython/issues/127655");
  script_xref(name:"URL", value:"https://github.com/python/cpython/pull/127656");
  script_xref(name:"URL", value:"https://docs.python.org/3.13/whatsnew/changelog.html#python-3-13-2-final");
  script_xref(name:"URL", value:"https://docs.python.org/3.12/whatsnew/changelog.html#python-3-12-9-final");
  script_xref(name:"URL", value:"https://osv.dev/vulnerability/PSF-2024-14");

  exit(0);
}

include("host_details.inc");
include("version_func.inc");

if (isnull(port = get_app_port(cpe: CPE)))
  exit(0);

if (!infos = get_app_version_and_location(cpe: CPE, port: port, exit_no_version: TRUE,
                                          version_regex: "^[0-9]+\.[0-9]+\.[0-9]+"))
  exit(0);

version = infos["version"];
location = infos["location"];


if (version_in_range_exclusive(version: version, test_version_lo: "3.12", test_version_up: "3.12.9")) {
  report = report_fixed_ver(installed_version: version, fixed_version: "3.12.9", install_path: location);
  security_message(port: port, data: report);
  exit(0);
}

if (version_in_range_exclusive(version: version, test_version_lo: "3.13", test_version_up: "3.13.2")) {
  report = report_fixed_ver(installed_version: version, fixed_version: "3.13.2", install_path: location);
  security_message(port: port, data: report);
  exit(0);
}

exit(99);
