# .github/workflows/openvas-feed-fixed-links.yml
name: OpenVAS Feed Incremental Sync

on:
  schedule:
    - cron: "0 */6 * * *"  # every 6 hours
  workflow_dispatch:

jobs:
  sync_feeds:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y rsync git zip

      - name: Configure Git
        run: |
          git config --global user.email "github-actions@users.noreply.github.com"
          git config --global user.name "GitHub Actions"

      - name: Create temporary working directory
        run: mkdir -p $GITHUB_WORKSPACE/openvas-feeds

      - name: Pull feeds from Greenbone
        run: |
          echo "[INFO] Pulling feeds from fixed rsync links"

          # NVT feed
          rsync -avz --delete rsync://feed.community.greenbone.net:/nvt-feed/ $GITHUB_WORKSPACE/openvas-feeds/nvt-feed/

          # SCAP feed
          rsync -avz --delete rsync://feed.community.greenbone.net/community/vulnerability-feed/24.10/scap-data/ $GITHUB_WORKSPACE/openvas-feeds/scap-feed/

          # CERT feed
          rsync -avz --delete rsync://feed.community.greenbone.net/community/vulnerability-feed/24.10/cert-data/ $GITHUB_WORKSPACE/openvas-feeds/cert-feed/

          # VT feed
          rsync -avz --delete rsync://feed.community.greenbone.net/community/vulnerability-feed/24.10/vt-data/ $GITHUB_WORKSPACE/openvas-feeds/vt-feed/

      - name: Split large feeds into parts
        run: |
          # SCAP feed split
          SCAP_DIR=$GITHUB_WORKSPACE/openvas-feeds/scap-feed
          mkdir -p $GITHUB_WORKSPACE/scap-feed-parts
          PART=1
          for f in "$SCAP_DIR"/*; do
              SIZE_MB=$(du -m "$f" | cut -f1)
              if [ $SIZE_MB -gt 90 ]; then
                  PART_DIR="$GITHUB_WORKSPACE/scap-feed-parts/part-$PART"
                  mkdir -p "$PART_DIR"
                  cp "$f" "$PART_DIR/"
                  PART=$((PART+1))
              else
                  PART_DIR="$GITHUB_WORKSPACE/scap-feed-parts/part-1"
                  mkdir -p "$PART_DIR"
                  cp "$f" "$PART_DIR/"
              fi
          done

      - name: Push incremental changes to GitHub
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          push_repo() {
              local SRC_DIR=$1
              local REPO_NAME=$2
              local TMP_REPO=$GITHUB_WORKSPACE/tmp-$REPO_NAME

              if [ -d "$TMP_REPO/.git" ]; then
                  cd "$TMP_REPO"
                  git pull origin main
              else
                  git clone https://x-access-token:$GH_TOKEN@github.com/username/$REPO_NAME.git "$TMP_REPO" || git init "$TMP_REPO"
              fi

              cp -r "$SRC_DIR"/* "$TMP_REPO/"
              cd "$TMP_REPO"
              git add .
              git diff-index --quiet HEAD || git commit -m "Update $REPO_NAME [skip ci]"
              git push https://x-access-token:$GH_TOKEN@github.com/$REPO_NAME.git main --force
          }

          # Push NVT
          push_repo "$GITHUB_WORKSPACE/openvas-feeds/nvt-feed" "openvas-nvt-feed"

          # Push CERT
          push_repo "$GITHUB_WORKSPACE/openvas-feeds/cert-feed" "openvas-cert-feed"

          # Push SCAP parts
          for part in $GITHUB_WORKSPACE/scap-feed-parts/*; do
              PART_NAME=$(basename $part)
              push_repo "$part" "openvas-scap-feed-$PART_NAME"
          done

          # VT feed - split and push
          VT_DIR=$GITHUB_WORKSPACE/openvas-feeds/vt-feed
          mkdir -p $GITHUB_WORKSPACE/vt-feed-parts
          PART=1
          find "$VT_DIR" -mindepth 1 -maxdepth 1 -type d | while read d; do
              SIZE_MB=$(du -sm "$d" | cut -f1)
              if [ $SIZE_MB -gt 90 ]; then
                  PART_DIR="$GITHUB_WORKSPACE/vt-feed-parts/part-$PART"
                  mkdir -p "$PART_DIR"
                  cp -r "$d" "$PART_DIR/"
                  PART=$((PART+1))
              else
                  PART_DIR="$GITHUB_WORKSPACE/vt-feed-parts/part-1"
                  mkdir -p "$PART_DIR"
                  cp -r "$d" "$PART_DIR/"
              fi
          done

          for part in $GITHUB_WORKSPACE/vt-feed-parts/*; do
              PART_NAME=$(basename $part)
              push_repo "$part" "openvas-vt-feed-$PART_NAME"
          done
